{"version":3,"sources":["components/ToDoForm.js","components/ToDoItem.js","components/ToDoList.js","components/ToDo.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["ToDoForm","props","useState","description","setDescription","assignee","setAssignee","status","setStatus","difficulty","setDifficulty","Form","id","Group","controlId","Label","Control","as","rows","value","onChange","e","target","type","placeholder","Check","label","min","max","step","Button","variant","onClick","addTask","ToDoItem","data","indx","newTask","modifyTask","ToDoList","items","i","tasks","length","push","key","ToDo","setTasks","useEffect","incomplete","document","title","Container","taskDetails","updatedTask","currentTasks","Header","Footer","href","src","alt","App","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66c0fb2c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nfunction ToDoForm(props) {\n    const [description, setDescription] = useState(props.description || '');\n    const [assignee, setAssignee] = useState(props.assignee || '');\n    const [status, setStatus] = useState(props.status || 'incomplete');\n    const [difficulty, setDifficulty] = useState(props.difficulty || 0);\n\n    function formSubmit() {\n        props.addTask({\n            description,\n            assignee,\n            status,\n            difficulty,\n        });\n    }\n\n    return (\n        <Form id =\"main-form\">\n            <Form.Group controlId='todo-description'>\n                <Form.Label>Task Description</Form.Label>\n                <Form.Control\n                    as='textarea'\n                    rows='3'\n                    value={description}\n                    onChange={(e) => {\n                        setDescription(e.target.value);\n                    }}\n                />\n            </Form.Group>\n            <Form.Group controlId='todo-assignee'>\n                <Form.Label>Assigned To:</Form.Label>\n                <Form.Control\n                    type='text'\n                    placeholder='Enter name'\n                    value={assignee}\n                    onChange={(e) => {\n                        setAssignee(e.target.value);\n                    }}\n                />\n            </Form.Group>\n            <Form.Group controlId='todo-status'>\n                <Form.Label>Status</Form.Label>\n                <Form.Check\n                    value={status === 'complete'}\n                    onChange={() => {\n                        setStatus(\n                            status === 'complete' ? 'incomplete' : 'complete',\n                        );\n                    }}\n                    type='switch'\n                    id='status-switch'\n                    label={status}\n                />\n            </Form.Group>\n            <Form.Group controlId='todo-difficulty'>\n                <Form.Label>Difficulty</Form.Label>\n                <Form.Control\n                    type='range'\n                    min={0}\n                    max={5}\n                    step={1}\n                    value={difficulty}\n                    onChange={(e) => {\n                        setDifficulty(e.target.value);\n                    }}\n                />\n            </Form.Group>\n\n            <Button id =\"submit-button\" variant='primary' type='button' onClick={formSubmit}>\n                Add Task\n            </Button>\n        </Form>\n    );\n}\n\nexport default ToDoForm;","import React from 'react';\n\nimport Form from 'react-bootstrap/Form';\n\nfunction ToDoItem(props) {\n    return (\n        <div>\n            <p>{props.data.description}</p>\n\n            <p>{props.data.assignee}</p>\n\n            <p>{props.data.difficulty}</p>\n\n            <Form.Group controlId={'todo-status-' + props.indx}>\n                <Form.Label>Status</Form.Label>\n                <Form.Check\n                    value={props.data.status === 'complete'}\n                    type='switch'\n                    onChange={() => {\n                        let newTask = { ...props.data };\n                        newTask.status =\n                            newTask.status === 'complete'\n                                ? 'incomplete'\n                                : 'complete';\n                        props.modifyTask(props.indx, newTask);\n                    }}\n                    id={'status-switch-' + props.indx}\n                    label={props.data.status}\n                />\n            </Form.Group>\n        </div>\n    );\n}\n\nexport default ToDoItem;","import React from 'react';\nimport ToDoItem from './ToDoItem';\n\nfunction ToDoList(props) {\n    let items = [];\n\n    for (let i = 0; i < props.tasks.length; i++)\n        items.push(\n            <ToDoItem\n                key={i}\n                indx={i}\n                data={props.tasks[i]}\n                modifyTask={props.modifyTask}\n            />,\n        );\n\n    return (\n        <div>\n            <h1>Tasks</h1>\n            {items}\n        </div>\n    );\n}\n\nexport default ToDoList;","import React, { useState, useEffect } from 'react';\nimport ToDoForm from './ToDoForm';\nimport ToDoList from './ToDoList';\nimport Container from 'react-bootstrap/Container';\n\nfunction ToDo(props) {\n    let [tasks, setTasks] = useState([]);\n\n    function addTask(taskDetails) {\n        setTasks([...tasks, taskDetails]);\n    }\n\n    function modifyTask(indx, updatedTask) {\n        let currentTasks = [...tasks];\n        currentTasks[indx] = updatedTask;\n        setTasks(currentTasks);\n    }\n\n    useEffect(() => {\n        let incomplete = 0;\n\n        for (let i = 0; i < tasks.length; i++) {\n            if (tasks[i].status === 'incomplete') incomplete++;\n        }\n\n        if (incomplete === 1) document.title = '1 incomplete task';\n        else if (incomplete) document.title = incomplete + ' incomplete tasks';\n        else document.title = 'All tasks complete';\n    }, [tasks]);\n\n    return (\n        <Container id = \"main-container\">\n            <ToDoForm addTask={addTask} />\n            <ToDoList tasks={tasks} modifyTask={modifyTask} />\n        </Container>\n    );\n}\n\nexport default ToDo;","import React from 'react';\n\nexport default function Header() {\n  return (\n    <header>\n      <h1>To Do List</h1>\n    </header>\n  )\n}","import React from 'react';\nexport default function Footer() {\n  return (\n    <footer>\n      <div id=\"external-account\">\n        <h1>Shubham Majumdar</h1>\n        <a href='https://www.linkedin.com/in/majumdar-shubham' target='_blank'>\n          <img src={'/assets/linkedin.jpg'} alt={'LinkedIn'} />\n        </a>\n        <a href='https://github.com/smajumdar22' target='_blank'>\n          <img src={'/assets/github.png'} alt={'GitHub'} />\n        </a>\n      </div>\n    </footer>\n  )\n}","import React from 'react';\nimport ToDo from './components/ToDo';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport './styles/styles.scss';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ToDo />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}